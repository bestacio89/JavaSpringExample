name: CI  # Name of the GitHub Actions workflow

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

# Define the events that trigger this workflow
on:
  # Trigger on pull requests to master or main branches, ignoring changes in 'docs' directory
  pull_request:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

  # Trigger on push to master or main branches, ignoring changes in 'docs' directory
  push:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

# Define concurrency settings to ensure multiple workflows don't interfere
concurrency:
  group: ${{ github.head_ref || github.run_id }}  # Group by head ref or run ID
  cancel-in-progress: true  # Cancel previous runs if a new one is triggered

# Define jobs to run in this workflow
jobs:
  # Job for running linter
  linter:
    runs-on: ubuntu-latest  # Use Ubuntu latest version as the runner

    steps:
      - name: Checkout Code Repository  # Step to checkout the code repository
        uses: actions/checkout@v4  # Use GitHub's checkout action (v4)

      - name: Set up JDK  # Step to set up Java environment
        uses: actions/setup-java@v3  # Use GitHub's setup Java action (v3)
        with:
          distribution: 'adopt'  # Distribution of JDK
          java-version: '17'  # Specify JDK version to use

      - name: Run Maven linter  # Step to run Maven linter (e.g., checkstyle)
        run: mvn checkstyle:check  # Run Maven checkstyle

  # Job for running tests
  test:
    runs-on: ubuntu-latest  # Use Ubuntu latest version as the runner

    steps:
      - name: Checkout Code Repository  # Step to checkout the code repository
        uses: actions/checkout@v4  # Use GitHub's checkout action (v4)

      - name: Build the Docker stack  # Step to build the Docker stack
        run: |
          docker compose -f Docker/docker-compose.yml build  # Build all services defined in Docker/docker-compose.yml

      - name: Run changelog Migrations  # Step to run database migrations
        run: |
          docker compose -f Docker/docker-compose.yml run --rm app mvn flyway:migrate  # Run Flyway migrations
          # Note: Ensure 'app' is the correct service name

      - name: Run Maven tests  # Step to run tests
        run: |
          docker compose -f Docker/docker-compose.yml run JavaSpringExample mvn test  # Run Maven tests
          # Note: Ensure 'JavaSpringExample' is the correct service name

      - name: Tear down the Docker stack  # Step to tear down the Docker stack
        run: |
          docker compose -f Docker/docker-compose.yml down  # Take down the stack
          # Adjust command options as needed (e.g., stop only specific services)
